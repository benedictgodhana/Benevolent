<?php

namespace App\Http\Controllers;

use App\Models\Contribution;
use App\Models\Expense;
use App\Models\User;
use Illuminate\Http\Request;
use Inertia\Inertia;
use Illuminate\Support\Str;
use Maatwebsite\Excel\Facades\Excel;
use App\Imports\ExpensesImport;

use Illuminate\Support\Facades\Auth;

class ExpenseController extends Controller
{
    public function expense()
{
    // Fetch expenses with associated user, contribution, and creator
    $expenses = Expense::with(['user', 'contribution', 'creator'])->get()->map(function ($expense) {
        return [
            'id' => $expense->id,
            'date' => $expense->created_at,
            'description' => $expense->description,
            'amount' => $expense->amount,
            'code'=>$expense->code,
            'user_id' => $expense->user ? $expense->user->name : 'N/A', // Check if user exists
            'contribution_id' => $expense->contribution ? $expense->contribution->description : 'N/A', // Assuming 'description' is the attribute for contribution name
            'creator_name' => $expense->creator ? $expense->creator->name : 'N/A', // Fetch creator's name
        ];
    });



    // Fetch all users and contributions
    $users = User::all();
    $contributions = Contribution::all();

    return Inertia::render('Admin/Expense', [
        'expenses' => $expenses,
        'users' => $users,
        'contributions' => $contributions,
    ]);
}

public function store(Request $request)
{
    $validatedData = $request->validate([
        'date' => 'required|date',
        'description' => 'required|string|max:255',
        'amount' => 'required|numeric',
        'member' => 'nullable|exists:users,id',
        'contribution' => 'nullable|exists:contributions,id',
    ]);

    // Generate a unique code for the expense
    $code = 'EXP' . date('Ymd') . '-' . strtoupper(Str::random(5));

    $expense = new Expense();
    $expense->date = $validatedData['date'];
    $expense->description = $validatedData['description'];
    $expense->amount = $validatedData['amount'];
    $expense->code = $code; // Set the autogenerated code
    $expense->user_id = $validatedData['member'] ?? null;
    $expense->contribution_id = $validatedData['contribution'] ?? null;
    $expense->created_by = Auth::id(); // Record the ID of the user who created the expense
    $expense->save();

}


public function import(Request $request)
{
    $request->validate([
        'file' => 'required|mimes:xlsx,xls,csv',
    ]);

    try {
        Excel::import(new ExpensesImport, $request->file('file'));

        return redirect()->back()->with('success', 'Expenses imported successfully.');
    } catch (\Exception $e) {
        return redirect()->back()->with('error', 'Error importing expenses: ' . $e->getMessage());
    }
}


}
